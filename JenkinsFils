pipeline {
    agent any

    environment {
        // Utiliser les credentials de DockerHub
        DOCKERHUB_CREDENTIALS = credentials('docker') // Assurez-vous que 'docker' correspond à l'ID que vous avez utilisé dans Jenkins
        DOCKER_TEST_IMAGE = "charaf751/new-angular:test"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    bat "docker build -t ${DOCKER_TEST_IMAGE} ."
                }
            }
        }

        stage('Security Scan with Grype') {
            steps {
                script {
                    bat "docker run --rm -v /var/run/docker.sock:/var/run/docker.sock anchore/grype ${DOCKER_TEST_IMAGE}"
                }
            }
        }

        stage('Login to DockerHub') {
            steps {
                script {
                    
                    //bat " echo ${ DOCKERHUB_CREDENTIALS_PSW }"
                    bat " echo ${ DOCKERHUB_CREDENTIALS_USR }"
                    // Use the echo command to pass the password to docker login .
                    bat " docker login -u ${ DOCKERHUB_CREDENTIALS_USR } -p ${ DOCKERHUB_CREDENTIALS_PSW }"
                    // Connexion à DockerHub à l'aide des credentials stockés dans Jenkins
                    bat """
                    docker login -u charaf751 -p dckr_pat_eu3k7aSzLfj3sM9WZKLVL-ka3IE
                    """
                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                script {
                    // Pousser l'image vers DockerHub avec le tag spécifié
                    bat "docker push ${DOCKER_TEST_IMAGE}"
                }
            }
        }

        stage('Deploy Front End') {
            steps {
                script {
                    bat "docker run -d -p 4201:80 ${DOCKER_TEST_IMAGE}"
                }
            }
        }
    }

    post {
        always {
            bat "docker logout"
        }
    }
}
